{"version":3,"sources":["Course.js","CourseSales.js","App.js","serviceWorker.js","index.js"],"names":["Course","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","active","clicker","bind","assertThisInitialized","inherits","createClass","key","value","setState","sumPrice","price","react_default","a","createElement","className","onClick","name","duration","React","Component","CourseSales","total","_this2","console","log","items","courses","map","item","i","src_Course","id","App","src_CourseSales","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c41c50f0.chunk.js","sourcesContent":["import React from 'react'\n\n// Child Component\n\nexport class Course extends React.Component {\n    clicker() {\n        var active = !this.state.active;\n        this.setState({ active: active });\n        this.props.sumPrice(active ? this.props.price : -this.props.price);\n    }\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            active: false\n        };\n        this.clicker = this.clicker.bind(this);\n    }\n    render() {\n        return (\n            <div>\n                <p className={this.state.active ? 'active' : ''} onClick={this.clicker}>{this.props.name} <b>£{this.props.price}</b> - <span className=\"duration\">{this.props.duration}</span>\n                </p>\n\n            </div>\n        );\n    }\n}\n\n\nexport default Course","import React from 'react'\nimport Course from './Course'\n\n// Child Component\n\n\nexport class CourseSales extends React.Component {\n    sumPrice(price) {\n        this.setState({ total: this.state.total + price });\n    }\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            total: 0\n        };\n\n        this.sumPrice = this.sumPrice.bind(this);\n    }\n\n    render() {\n        console.log(this.props.items);\n        var courses = this.props.items.map((item, i) => {\n            return (\n                <Course name={item.name}\n                price={item.price}\n                duration={item.duration}\n                key={i} sumPrice={this.sumPrice} active={item.active} \n                />\n            )\n        });\n        return (\n            <div>\n                <h2>Click to add to your total</h2>\n                <br />\n                <div id=\"courses\">\n                    {courses}\n                    <p id=\"total\">Total: <b>£{this.state.total}</b></p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CourseSales\n\n","import React from 'react'\nimport CourseSales from './CourseSales'\n\n// Parent Component\n\n// Sales component: App.js\n class App extends React.Component {\n    render() {\n        var courses = [\n            { name: 'Swimming', price: 99, duration: \"One day a week for 1 month\" },\n            { name: 'Scuba Diving', price: 205, duration: \"5 consecutive days\" },\n            { name: 'Surfing', price: 30, duration: \"Daily drop-in sessions\" },\n            { name: 'Snorkelling', price: 150, duration: \"Twice a week\" }\n        ];\n\n        return (\n            <div className=\"App\">\n                <div className=\"App-header\">\n                    <h2>Welcome to the Swim and Surf Shack</h2>\n                    <p>See our available courses below </p>\n                </div>\n                <CourseSales items={courses} />\n            </div>\n        );\n    }\n}\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}